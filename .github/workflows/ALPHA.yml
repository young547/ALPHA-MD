
name: ELIAKIM-MD-LOCK-FIX

on:
  workflow_dispatch:

concurrency:
  group: 'eliakim-md-bot'
  cancel-in-progress: true

jobs:
  loop-task:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Run Bot (loop & auto-restart with retries)
        run: |
          echo "Running ELIAKIM-MD with retry on failure to handle DB locks..."
          for i in {1..5}
          do
            timeout 3600 npm start && break
            echo "Bot crashed or locked, retrying in ((i * 10)) seconds..."
            sleep((i * 10))
          done

      - name: Re-Trigger Workflow
        if: always()
        run: |
          echo "Re-running workflow..."
          curl -X POST \
            -H "Authorization: Bearer secrets.SUBZERO "             -H "Accept: application/vnd.github.v3+json"             https://api.github.com/repos/{{ github.repository }}/actions/workflows/Eliakim.yml/dispatches \
-d '{"ref":"main"}'
```

---

And in your bot code (JavaScript with Sequelize), update the initialization to include retry logic:

```js
const { Sequelize } = require('sequelize');

const sequelize = new Sequelize({
  dialect: 'sqlite',
  storage: './database.sqlite',
  retry: {
    match: [/SQLITE_BUSY/],
    max: 5,
    backoffBase: 100,
    backoffExponent: 1.5,
  }
});
```

---

*If you want, I can help write a sample wrapper function for DB queries with retries or explain how to ensure only one bot instance runs at a time.* Just let me know!
